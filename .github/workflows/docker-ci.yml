# This is a basic workflow to help you get started with Actions

name: docker-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
      
      # Runs a single command using the runners shell
      - name: Package app with Maven
        run: |
          ./mvnw clean install
          mv target/container-ci-demo-0.0.1-SNAPSHOT.jar target/container-ci-demo.jar
      
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests with Maven
        run: mvn -B test --file pom.xml
      -
        name: Publish Dockerize App to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/container-ci-demo
          tags: latest, ${{ steps.tag_version.outputs.new_tag }}
          
      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      #- name: Bump version and push tag
        #id: tag_version
        #uses: mathieudutour/github-tag-action@v5
        #with:
          #github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub Semantic release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          #tag_name: ${{ steps.tag_version.outputs.new_tag }}
          #release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}   
          
      #- name: Release
        #uses: qcastel/github-actions-maven-release@container-demo
        #with:
          #access-token: ${{ secrets.GITHUB_TOKEN }}
      #-
        #name: Slack Notification
        #uses: rtCamp/action-slack-notify@v2
        #env:
          #SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          #SLACK_MESSAGE: Job for Release ${{ steps.tag_version.outputs.new_tag }} completed successfully.
      #-
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        #name: Move cache
        #run: |
          #rm -rf /tmp/.buildx-cache
          #mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        
      # Runs a set of commands using the runners shell
      #- name: Build and Push Docker Image
      #  uses: docker/build-push-action@v2
       # #uses: mr-smithers-excellent/docker-build-push@v4
       # with:
       #   image: container-ci-demo/container-ci-demo
        #  registry: docker.pkg.github.com
         # username: ${{ secrets.GITHUBUSER }}
         # password: ${{ secrets.GITHUBPASSWORD }}
